// <auto-generated />
using System;
using ISUAnket.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ISUAnket.DataAccess.Migrations
{
    [DbContext(typeof(ISUAnketContext))]
    [Migration("20250529110700_Veritabanını Olustur")]
    partial class VeritabanınıOlustur
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Anket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("AnketDurumu")
                        .HasColumnType("int");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenKullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DuzenleyenKullaniciId");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("Anketler");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Cevap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Birim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CevapTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoruId")
                        .HasColumnType("int");

                    b.Property<string>("VerilenCevap")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.HasKey("Id");

                    b.HasIndex("SoruId");

                    b.ToTable("Cevaplar");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("KulaniciAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TCKN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("RolAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Soru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int?>("AnketId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DuzenlenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DuzenleyenKullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("OlusturanKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoruMetni")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SoruSecenekleri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoruTipi")
                        .HasColumnType("int");

                    b.Property<bool?>("ZorunluMu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AnketId");

                    b.HasIndex("DuzenleyenKullaniciId");

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("Sorular");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Anket", b =>
                {
                    b.HasOne("ISUAnket.EntityLayer.Entities.Kullanici", "DuzenleyenKullanici")
                        .WithMany()
                        .HasForeignKey("DuzenleyenKullaniciId");

                    b.HasOne("ISUAnket.EntityLayer.Entities.Kullanici", "OlusturanKullanici")
                        .WithMany()
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DuzenleyenKullanici");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Cevap", b =>
                {
                    b.HasOne("ISUAnket.EntityLayer.Entities.Soru", "Soru")
                        .WithMany("Cevaplar")
                        .HasForeignKey("SoruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Soru");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Kullanici", b =>
                {
                    b.HasOne("ISUAnket.EntityLayer.Entities.Rol", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Soru", b =>
                {
                    b.HasOne("ISUAnket.EntityLayer.Entities.Anket", "Anket")
                        .WithMany("Sorular")
                        .HasForeignKey("AnketId");

                    b.HasOne("ISUAnket.EntityLayer.Entities.Kullanici", "DuzenleyenKullanici")
                        .WithMany()
                        .HasForeignKey("DuzenleyenKullaniciId");

                    b.HasOne("ISUAnket.EntityLayer.Entities.Kullanici", "OlusturanKullanici")
                        .WithMany()
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anket");

                    b.Navigation("DuzenleyenKullanici");

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Anket", b =>
                {
                    b.Navigation("Sorular");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("ISUAnket.EntityLayer.Entities.Soru", b =>
                {
                    b.Navigation("Cevaplar");
                });
#pragma warning restore 612, 618
        }
    }
}
